id: telemetry_primaryheader_adder_1_telemetry_primaryheader_adder_1
label: "Telemetry Primary Header adder" 
category: '[telemetry_primaryheader_adder_1]'

templates:
  imports: from gnuradio import telemetry_primaryheader_adder_1
  make: telemetry_primaryheader_adder_1.telemetry_primaryheader_adder_1(${selector})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: coding 
  label: Coding 
  dtype: string
  options: ["Uncoded","Convolutional","Reed Solomon","Concatenated","Turbo","LDPC on a Transfer Frame","LDPC on a Stream of SMTFS"]
  default: "Uncoded"
    
- id: size
  label: Size
  dtype: int 
  default: 0

    
- id: space_craft_id
  label: Space Craft ID 
  dtype: int 
  default: 0
  
- id: virtual_channel_id 
  label: Virtual Channel ID
  dtype: int 
  default: 0
  
- id: ocf_flag 
  label: OCF Flag
  dtype: int 
  default: 0
  
- id: master_channel_frame_count 
  label: Master Channel Frame Count 
  dtype: int 
  default: 0
  
- id: virtual_channel_frame_count 
  label: Virtual Channel Frame count 
  dtype: int 
  default: 0
  
- id: transfer_frame_secondary_header_flag 
  label: Transfer Frame Secondary Header Flag 
  dtype: string 
  options: ["Yes", "No"]
  default: "Yes"
  
- id: synch_flag 
  label: Synch Flag 
  dtype: string 
  options: ["Yes", "No"]
  default: "Yes"
  
- id: packet_order_flag 
  label: Packet Order Flag 
  dtype: string 
  options: ["Yes", "No"]
  default: "Yes"
  
  
- id: segment_length_id 
  label: Packet Order Flag 
  dtype: int 
  default: 0 
  
  
- id: first_header_pointer
  label: First Header Pointer 
  dtype: string 
  default: "None" 
  
  
    
  
    
  
  
    
  
    
  
    
  
  
    
    
  
    
  
  
    
  
    
  
    
  
  
    
    
  
    
  
  
    
  
    
  
    
  
  
    
    
  
    
  
  
    
  
    
  
    
  
  
    
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in0 
  domain: stream 
  dtype: complex 
  vlen: 1 
  optional: false

outputs:
- label: out0 
  domain: stream
  dtype: complex
  vlen: 1
  optional: true 

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
